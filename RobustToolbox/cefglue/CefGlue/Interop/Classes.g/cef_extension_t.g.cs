//
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
//
namespace Xilium.CefGlue.Interop
{
    using System;
    using System.Diagnostics.CodeAnalysis;
    using System.Runtime.InteropServices;
    using System.Security;
    
    [StructLayout(LayoutKind.Sequential, Pack = libcef.ALIGN)]
    [SuppressMessage("Microsoft.Design", "CA1049:TypesThatOwnNativeResourcesShouldBeDisposable")]
    internal unsafe struct cef_extension_t
    {
        internal cef_base_ref_counted_t _base;
        internal delegate* unmanaged<cef_extension_t*, cef_string_userfree*> _get_identifier;
        internal delegate* unmanaged<cef_extension_t*, cef_string_userfree*> _get_path;
        internal delegate* unmanaged<cef_extension_t*, cef_dictionary_value_t*> _get_manifest;
        internal delegate* unmanaged<cef_extension_t*, cef_extension_t*, int> _is_same;
        internal delegate* unmanaged<cef_extension_t*, cef_extension_handler_t*> _get_handler;
        internal delegate* unmanaged<cef_extension_t*, cef_request_context_t*> _get_loader_context;
        internal delegate* unmanaged<cef_extension_t*, int> _is_loaded;
        internal delegate* unmanaged<cef_extension_t*, void> _unload;
        
        // AddRef
        
        public static void add_ref(cef_extension_t* self)
        {
            self->_base._add_ref((cef_base_ref_counted_t*)self);
        }
        
        // Release
        
        public static int release(cef_extension_t* self)
        {
            return self->_base._release((cef_base_ref_counted_t*)self);
        }
        
        // HasOneRef
        
        public static int has_one_ref(cef_extension_t* self)
        {
            return self->_base._has_one_ref((cef_base_ref_counted_t*)self);
        }
        
        // HasAtLeastOneRef
        
        public static int has_at_least_one_ref(cef_extension_t* self)
        {
            return self->_base._has_at_least_one_ref((cef_base_ref_counted_t*)self);
        }
        
        // GetIdentifier
        
        public static cef_string_userfree* get_identifier(cef_extension_t* self)
        {
            return self->_get_identifier(self);
        }
        
        // GetPath
        
        public static cef_string_userfree* get_path(cef_extension_t* self)
        {
            return self->_get_path(self);
        }
        
        // GetManifest
        
        public static cef_dictionary_value_t* get_manifest(cef_extension_t* self)
        {
            return self->_get_manifest(self);
        }
        
        // IsSame
        
        public static int is_same(cef_extension_t* self, cef_extension_t* that)
        {
            return self->_is_same(self, that);
        }
        
        // GetHandler
        
        public static cef_extension_handler_t* get_handler(cef_extension_t* self)
        {
            return self->_get_handler(self);
        }
        
        // GetLoaderContext
        
        public static cef_request_context_t* get_loader_context(cef_extension_t* self)
        {
            return self->_get_loader_context(self);
        }
        
        // IsLoaded
        
        public static int is_loaded(cef_extension_t* self)
        {
            return self->_is_loaded(self);
        }
        
        // Unload
        
        public static void unload(cef_extension_t* self)
        {
            self->_unload(self);
        }
        
    }
}
